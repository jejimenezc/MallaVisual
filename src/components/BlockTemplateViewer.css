/* src/components/BlockTemplateViewer.css */

/* Contenedor del viewer: anclaje arriba-izquierda */
.viewer-grid {
  display: block;
}

/* La grilla del viewer: 10 columnas explícitas; filas con altura derivada del contenido */
.viewer-grid .template-grid {
  display: grid;                               /* asegura grid */
  grid-template-columns: repeat(10, minmax(0, 1fr));
  grid-auto-flow: row;
  grid-auto-rows: auto;                        /* altura gobierna cada celda */
  justify-content: start;                      /* anclaje horizontal izquierda */
  align-content: start;                        /* anclaje vertical arriba */
}

/* —————————— Modo 1:1 (default) —————————— */
/* Celdas cuadradas; ancho de la grilla normal */
.viewer-grid[data-aspect="1/1"] .template-cell {
  aspect-ratio: 1 / 1;
}
.viewer-grid[data-aspect="1/1"] .template-grid {
  inline-size: 100%;
}

/* —————————— Modo 2:1 (apaisado) —————————— */
/* Misma anchura, cada celda la mitad de alta → grilla total con ~mitad de alto */
.viewer-grid[data-aspect="2/1"] .template-cell {
  aspect-ratio: 2 / 1;
}
.viewer-grid[data-aspect="2/1"] .template-grid {
  inline-size: 100%;
}

/* —————————— Modo 1:2 (vertical) —————————— */
/* Celdas siguen cuadradas (no escalamos texto),
   pero la grilla reduce su ANCHO a la mitad (cada celda queda a mitad de ancha) */
.viewer-grid[data-aspect="1/2"] .template-cell {
  aspect-ratio: 1 / 1;     /* mantenemos cuadradas: no afecta tamaño del texto */
}
/* Reducimos sólo el ancho de la grilla, anclado a la izquierda */
.viewer-grid[data-aspect="1/2"] .template-grid {
  inline-size: 50%;
}
